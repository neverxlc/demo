server.port=8000
spring.application.name=DEMO

#spring.main.show-banner=false
#spring.main.banner-mode=off

#http://blog.didispace.com/springbootlog4jmuilt/
##application.properties中设置spring.profiles.active=dev，就是说默认以dev环境设置
spring.profiles.active = dev 
#执行java -jar xxx.jar，可以观察到服务端口被设置为1111，也就是默认的开发环境（dev）
#执行java -jar xxx.jar --spring.profiles.active=test，可以观察到服务端口被设置为2222，也就是测试环境的配置（test）
#执行java -jar xxx.jar --spring.profiles.active=prod，可以观察到服务端口被设置为3333，也就是生产环境的配置（prod）
#application.properties中配置通用内容，并设置spring.profiles.active=dev，以开发环境为默认配置
#application-{profile}.properties中配置各个环境不同的内容
#通过命令行方式去激活不同环境的配置
com.hctym.email = never_xlc@163.com
storage.location = d:/upload-dir

#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:h2:file:~/testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.h2.console.path=/h2
#spring.h2.console.enabled = true
#spring.h2.console.settings.trace=true
#spring.jpa.showSql=true
#spring.jpa.generateDdl=true
#spring.jpa.properties.hibernate.hbm2ddl.auto = update

hctym.name=this is test

endpoints.shutdown.enabled=true

info.contactEmail=972927683@qq.com

management.endpoints.web.exposure.include=*

management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

#debug=true

#data.mongodb.uri=mongodb://localhost:27017/?readPreference=primary&appname=MongoDB%20Compass%20Community&ssl=false
#data.mongodb.uri=mongodb://localhost:27017/hctym
spring.data.mongodb.uri=mongodb://localhost:27017/hctym


spring.task.scheduling.threadNamePrefix = demo-schedule-
spring.task.scheduling.pool.size=4


## 下面为连接池的补充设置，应用到上面所有数据源中
## 初始化大小，最小，最大
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据
##spring.datasource.useGlobalDataSourceStat=true

